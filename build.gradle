import java.security.MessageDigest

plugins {
    id 'java'
}

group = 'com.github.catvod'
version = '1.0'

repositories {
    mavenCentral()
}

ext {
    dv = [
            gson: '2.11.0',
            guava: '33.2.1-jre',
            lang3: '3.16.0',
            okhttp: '5.0.0-alpha.14',
            hutoolAll: '5.8.27',
            jsoup: '1.15.3',
            jsoupXpath: '2.5.1',
            json: '20250517',
            zxingCore: '3.5.3',
            lombok: '1.18.34',
            sardine: '5.13'
    ]
}

dependencies {
    testImplementation "com.squareup.okhttp3:okhttp:${dv.okhttp}"
    compileOnly "com.squareup.okhttp3:okhttp:${dv.okhttp}"

    testImplementation "com.google.code.gson:gson:${dv.gson}"
    compileOnly "com.google.code.gson:gson:${dv.gson}"

    testImplementation "com.google.guava:guava:${dv.guava}"
    compileOnly "com.google.guava:guava:${dv.guava}"

    testImplementation "cn.hutool:hutool-all:${dv.hutoolAll}"
    compileOnly "cn.hutool:hutool-all:${dv.hutoolAll}"

    testImplementation "org.jsoup:jsoup:${dv.jsoup}"
    compileOnly "org.jsoup:jsoup:${dv.jsoup}"

    testImplementation "cn.wanghaomiao:JsoupXpath:${dv.jsoupXpath}"
    compileOnly "cn.wanghaomiao:JsoupXpath:${dv.jsoupXpath}"

    testImplementation "org.json:json:${dv.json}"
    compileOnly "org.json:json:${dv.json}"

    implementation "com.google.zxing:core:${dv.zxingCore}"
    implementation "com.github.lookfirst:sardine:${dv.sardine}"

    compileOnly "org.projectlombok:lombok:${dv.lombok}"
    annotationProcessor "org.projectlombok:lombok:${dv.lombok}"

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testCompileOnly "org.projectlombok:lombok:${dv.lombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${dv.lombok}"
}

jar {
    archiveFileName = 'spider.jar'
    doLast {
        calculateJarMd5()
    }
}

test {
    useJUnitPlatform()
}

def calculateJarMd5() {
    def jarFile = jar.archiveFile.get().asFile
    def digest = MessageDigest.getInstance('MD5')
    byte[] byteArray = new byte[1024]
    InputStream is = new FileInputStream(jarFile)
    while (is.read(byteArray) != -1) {
        digest.update(byteArray)
    }
    is.close()
    byte[] md5Bytes = digest.digest()
    StringBuffer hexValue = new StringBuffer()
    for (int i = 0; i < md5Bytes.length; i++) {
        hexValue.append(Integer.toHexString((md5Bytes[i] & 0xFF) | 0x100).substring(1, 3))
    }
    // 输出MD5到文件中
    new File("${jarFile.parent}/${jarFile.name}.md5").withWriter {
        it.write(hexValue.toString())
    }
    println '*********************************'
    println "MD5 of ${jarFile.name}: $hexValue"
    println '*********************************'
}